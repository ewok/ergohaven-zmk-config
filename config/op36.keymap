#include "keys_ru.h"
#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

&lt { flavor = "balanced"; };

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <16 17>;
            layers = <0>;
        };

        lpar {
            bindings = <&kp LPAR>;
            key-positions = <13 14>;
            layers = <0>;
        };

        rpar {
            bindings = <&kp RPAR>;
            key-positions = <15 16>;
            layers = <0>;
        };

        lbrc {
            bindings = <&kp LBRC>;
            key-positions = <3 4>;
            layers = <0>;
        };

        rbrc {
            bindings = <&kp RBRC>;
            key-positions = <5 6>;
            layers = <0>;
        };

        lbkt {
            bindings = <&kp LBKT>;
            key-positions = <23 24>;
            layers = <0>;
        };

        rbkt {
            bindings = <&kp RBKT>;
            key-positions = <25 26>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
  &kp Q         &kp W  &kp E  &kp R      &kp T                                               &kp Y            &kp U        &kp I      &kp O    &kp P
  &hml LCTRL A  &kp S  &kp D  &kp F      &kp G                                               &kp H            &kp J        &kp K      &kp L    &hmr RCTRL SEMICOLON
  &hml LALT Z   &kp X  &kp C  &kp V      &hml LCMD B                                         &hmr RCMD N      &kp M        &kp COMMA  &kp DOT  &hmr RIGHT_ALT SLASH
                              &lt 2 TAB  &mt LEFT_SHIFT SPACE  &lt 1 RET    &lt 1 BACKSPACE  &mt RSHFT SPACE  &lt 2 GRAVE
            >;

            display-name = "Base";
        };

        sym_en {
            bindings = <
  &kp N1             &kp N2         &kp N3     &kp N4     &kp N5                                     &kp N6            &kp N7     &kp N8    &kp N9            &kp N0
  &hml LCTRL EQUAL   &kp SLASH      &kp ASTRK  &kp MINUS  &kp PLUS                                   &kp PERCENT       &kp UNDER  &kp HASH  &kp BACKSLASH     &hmr RCTRL LEFT_BRACKET
  &hml LEFT_ALT DQT  &kp LESS_THAN  &kp EXCL   &kp AT     &hml LCMD CARET                            &hmr RCMD DOLLAR  &kp AMPS   &kp PIPE  &kp GREATER_THAN  &hmr RIGHT_ALT SQT
                                               &mo 3      &kp SPACE        &kp RET    &kp BACKSPACE  &kp SPACE         &mo 3
            >;

            display-name = "Symbols";
        };

        nav {
            bindings = <
  &kp CAPS         &kp F1  &kp F2   &kp F3   &kp F4                         &kp C_PP                &kp C_VOL_DN    &kp C_VOL_UP  &kp C_MUTE     &kp C_BRI_UP
  &kp LGUI         &kp F5  &kp F6   &kp F7   &kp F8                         &kp LEFT                &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT      &kp C_BRI_DN
  &kp PRINTSCREEN  &kp F9  &kp F10  &kp F11  &kp F12                        &hmr LEFT_CONTROL HOME  &kp PG_DN       &kp PG_UP     &hmr RALT END  &kp LC(PRINTSCREEN)
                                    &trans   &kp LG(SPACE)  &mo 3    &mo 3  &kp RG(SPACE)           &kp DEL
            >;

            display-name = "Navigation";
        };

        adj {
            bindings = <
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                    &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &none        &none         &none         &none         &out OUT_BLE                    &out OUT_BLE  &none         &none         &none         &none
  &bootloader  &none         &none         &none         &out OUT_USB                    &out OUT_USB  &none         &none         &none         &studio_unlock
                                           &trans        &to 4         &trans    &trans  &to 4         &trans
            >;

            display-name = "Adjust";
        };

        gaming {
            bindings = <
  &kp CAPS   &kp Q  &kp W  &kp E     &kp R                             &kp T    &kp Y   &kp U  &kp I  &kp O
  &kp LSHFT  &kp A  &kp S  &kp D     &kp F                             &kp G    &kp H   &kp J  &kp K  &kp L
  &kp LCTRL  &kp Z  &kp X  &kp C     &kp V                             &kp B    &kp N   &kp M  &kp P  &trans
                           &kp LALT  &kp SPACE  &lt 5 RET    &kp BSPC  &kp TAB  &trans
            >;
        };

        num_gaming {
            bindings = <
  &kp ESC  &kp N1  &kp N2  &kp N3  &kp N4                    &trans  &trans  &trans  &trans  &trans
  &kp F5   &kp N5  &kp N6  &kp N7  &kp N8                    &trans  &trans  &trans  &trans  &trans
  &kp F8   &kp M   &kp I   &kp N9  &kp N0                    &trans  &trans  &trans  &trans  &trans
                           &to 0   &trans  &trans    &trans  &trans  &to 0
            >;
        };
    };
};
